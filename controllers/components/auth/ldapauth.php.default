<?php
/**
* This file is part of taolin project (http://taolin.fbk.eu)
* Copyright (C) 2008, 2009 FBK Foundation, (http://www.fbk.eu)
* Authors: SoNet Group (see AUTHORS.txt)
*
* Taolin is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published by
* the Free Software Foundation version 3 of the License.
*
* Taolin is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Affero General Public License for more details.
*
* You should have received a copy of the GNU Affero General Public License
* along with Taolin. If not, see <http://www.gnu.org/licenses/>.
*
*/
?>
<?php


class LdapauthComponent extends Object  {


        protected $ldaphost = "INSERT HERE YOUR LDAP SERVER'S URL";  
        protected $ldapport = INSERT HERE YOUR LDAP SERVER'S PORT NUMBER;                
        protected $myuser = ""; // DO NOT MODIFY THIS LINE
        protected $dn = "INSERT HERE YOUR USER'S DN";

       public function connecttoserver($myuser, $password) {

        $this->myuser = $myuser;
        // Connecting to LDAP
        $ldapconn = ldap_connect($this->ldaphost, $this->ldapport);

        $bd = ldap_bind($ldapconn, $myuser, $password);

        return $bd;

    }

    public function getuserdn() {

        // Find user's dn
        $ldapconn = ldap_connect($this->ldaphost, $this->ldapport);
        $result = ldap_search($ldapconn, $this->dn, '(&(objectClass=person)(uid='.$this->myuser.'))', array('distinguishedName'));
        $entries = ldap_get_entries($ldapconn, $result);
        $member_dn = $entries[0]['distinguishedname'][0];
        return $member_dn;

    }



    public function getusergroups() {


        // Find user's groups
        $ldapconn = ldap_connect($this->ldaphost, $this->ldapport);
        $result = ldap_search($ldapconn, $dn, '(objectClass=group)', array('member', 'cn'));
        $entries = ldap_get_entries($ldapconn, $result);


        $session_groups = array();
        for ($i=0; $i < $entries["count"]; $i++) {
            $group = $entries[$i];
            if ($group['member']) {
                for ($j=0; $j < $group['member']['count']; $j++) {
                    $member = $group['member'][$j];
                    if ($member == $member_dn) {
                        $session_group['name'] = $group['cn'][0];
                        $session_groups[] = $session_group;
                    }
                }
            }
        }

        return $session_groups;
    }


    

}

?>
